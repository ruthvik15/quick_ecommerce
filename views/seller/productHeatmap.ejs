<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Heatmap - <%= product.name %></title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    #heatmap { height: 600px; width: 100%; margin-top: 20px; }
    body { font-family: Arial, sans-serif; padding: 20px; }

    /* Legend styling */
    #legend {
      position: absolute; bottom: 20px; right: 20px;
      background: rgba(255,255,255,0.9); padding: 10px 15px;
      border-radius: 5px; box-shadow: 0 0 10px rgba(0,0,0,0.2);
      z-index: 1000;
    }
    #legend h4 { margin:0 0 5px 0; text-align:center; }
    .legend-gradient { width:150px; height:20px; background:linear-gradient(to right, blue, cyan, yellow, red); border:1px solid #777; }
    .legend-labels { display:flex; justify-content:space-between; font-size:12px; }
  </style>
</head>
<body>
  <h2>Heatmap for: <%= product.name %></h2>

  <% if (Object.keys(blocks).length === 0) { %>
    <p>No orders in last 24 hours for this product.</p>
  <% } else { %>
    <div id="heatmap"></div>
    <div id="legend">
      <h4>Order Intensity</h4>
      <div class="legend-gradient"></div>
      <div class="legend-labels"><span>Low</span><span>High</span></div>
    </div>
  <% } %>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>

  <script>
    const blocks = <%- JSON.stringify(blocks) %>; // order data from backend
    const heatmapPoints = [];
    let maxCount = 0;
    let sumLat = 0, sumLng = 0, countPoints = 0;

    for (const key in blocks) {
      const count = blocks[key];
      if (count > 0) {
        const [lat, lng] = key.split(':').map(Number);
        const blockSize = 0.1; // spread the heat
        heatmapPoints.push([lat + blockSize/2, lng + blockSize/2, count]);
        if (count > maxCount) maxCount = count;

        sumLat += lat;
        sumLng += lng;
        countPoints++;
      }
    }

    if (heatmapPoints.length > 0) {
      // Center map roughly in the middle of all points
      const centerLat = sumLat / countPoints;
      const centerLng = sumLng / countPoints;
      const map = L.map('heatmap').setView([centerLat, centerLng], 11);

      // Add map tiles
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: '&copy; OpenStreetMap contributors' }).addTo(map);

      // Draw heatmap
      L.heatLayer(heatmapPoints, {
        radius: 40,
        blur: 25,
        max: maxCount,
        maxZoom: 12,
        minOpacity: 0.2,
        gradient: { 0.2:'blue', 0.4:'cyan', 0.7:'yellow', 1.0:'red' }
      }).addTo(map);

      //invisible circles to show count
      heatmapPoints.forEach(p => {
        const [lat, lng, count] = p;
        L.circleMarker([lat, lng], { radius:20, fillOpacity:0, stroke:false })
          .addTo(map)
          .bindTooltip(`<b>Orders: ${count}</b>`);
      });
    }
  </script>
</body>
</html>
